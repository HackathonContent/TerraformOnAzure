name: Docker Image CI

on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  REPO: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - name: Log in to the Container registry 
      uses: docker/login-action@v2
      with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

    - name: Clone source repo
      run: git clone https://github.com/Azure-Samples/dotNET-FrontEnd-to-BackEnd-on-Azure-Container-Apps storefront
   
    # Build storefront UI image
    - name: Create metadata (tags, labels) for Docker
      id: metastore
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{env.REPO}}/storefront
        flavor: latest=true 

    - name: Build and push storefront image
      uses: docker/build-push-action@v4
      with:
        context: storefront/src
        file: storefront/src/Store/Dockerfile
        push: true
        tags: ${{ steps.metastore.outputs.tags }}
        labels: ${{ steps.metastore.outputs.labels }}
  
  # Build inventory API image
    - name: Create inventory metadata (tags, labels) for Docker
      id: metainventory
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{env.REPO}}/inventory
        flavor: latest=true 

    - name: Build and push inventory api image
      uses: docker/build-push-action@v4
      with:
        context: storefront/src
        file: storefront/src/Store.InventoryApi/Dockerfile
        push: true
        tags: ${{ steps.metainventory.outputs.tags }}
        labels: ${{ steps.metainventory.outputs.labels }}


  # Build product API image
    - name: Create product metadata (tags, labels) for Docker
      id: metaproduct
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{env.REPO}}/product
        flavor: latest=true 

    - name: Build and push product api image
      uses: docker/build-push-action@v4
      with:
        context: storefront/src
        file: storefront/src/Store.InventoryApi/Dockerfile
        push: true
        tags: ${{ steps.metaproduct.outputs.tags }}
        labels: ${{ steps.metaproduct.outputs.labels }}